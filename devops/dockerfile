FROM node:20-alpine as production 

ARG DB_HOST
ARG DB_PORT
ARG DB_NAME
ARG DB_USER
ARG DB_PASS
ARG DB_TYPE
ARG DB_LOGGING
ARG DB_SYNC
ARG API_PORT
ARG API_PREFIX
ARG ACCESS_JWT_SECRET_KEY
ARG REFRESH_JWT_SECRET_KEY
ARG ACCESS_TOKEN_EXPIRE_IN_SEC
ARG REFRESH_TOKEN_EXPIRE_IN_SEC
ARG PASSWORD_SECRET_KEY_USER
ARG EMAIL_HOST
ARG EMAIL_PORT
ARG EMAIL_SECURE
ARG EMAIL_USER
ARG EMAIL_PASSWORD
ARG CC_EMAILS
ARG IP_ADDRESS
ARG FE_PORT



#Convert ARG to ENV so they persist in the container
ENV DB_HOST=$DB_HOST
ENV DB_PORT=$DB_PORT
ENV DB_NAME=$DB_NAME
ENV DB_USER=$DB_USER
ENV DB_PASS=$DB_PASS
ENV DB_TYPE=$DB_TYPE
ENV DB_LOGGING=$DB_LOGGING
ENV DB_SYNC=$DB_SYNC
ENV API_PORT=$API_PORT
ENV API_PREFIX=$API_PREFIX
ENV ACCESS_JWT_SECRET_KEY=$ACCESS_JWT_SECRET_KEY
ENV REFRESH_JWT_SECRET_KEY=$REFRESH_JWT_SECRET_KEY
ENV ACCESS_TOKEN_EXPIRE_IN_SEC=$ACCESS_TOKEN_EXPIRE_IN_SEC
ENV REFRESH_TOKEN_EXPIRE_IN_SEC=$REFRESH_TOKEN_EXPIRE_IN_SEC
ENV PASSWORD_SECRET_KEY_USER=$PASSWORD_SECRET_KEY_USER
ENV EMAIL_HOST=$EMAIL_HOST
ENV EMAIL_PORT=$EMAIL_PORT
ENV EMAIL_SECURE=$EMAIL_SECURE
ENV EMAIL_USER=$EMAIL_USER
ENV EMAIL_PASSWORD=$EMAIL_PASSWORD
ENV CC_EMAILS=$CC_EMAILS
ENV IP_ADDRESS=$IP_ADDRESS
ENV FE_PORT=$FE_PORT

RUN mkdir -p /usr/src-prod/app

WORKDIR /usr/src-prod/app

# Copy package files and install dependencies
COPY package.json yarn.lock ./
RUN yarn global add @nestjs/cli
RUN yarn install --frozen-lockfile

# Install netcat for MySQL health check (before copying files)
RUN apk add --no-cache netcat-openbsd

# Copy source code and build
COPY . .
RUN yarn build

# Make entrypoint script executable
RUN chmod +x /usr/src-prod/app/devops/docker-entrypoint.sh

ENTRYPOINT ["/usr/src-prod/app/devops/docker-entrypoint.sh"]



