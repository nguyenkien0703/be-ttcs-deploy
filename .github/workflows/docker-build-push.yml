name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - master
    tags:
      - '*'
  workflow_dispatch:

env:
  # default (will be overridden in Set IMAGE_NAME)
  IMAGE_NAME: ghcr.io/nguyenkien0703/${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        #-------- Registry login (for both dev/prod)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

# ----------- Resolve IMAGE_NAME: prod path for tags, dev path for branch----
      - name: Set IMAGE_NAME
        run: |
          REPO="${{ github.repository }}"
          if [ "${{ github.ref_type }}" = "tag" ]; then
            NAME="ghcr.io/nguyenkien0703/prod/${REPO}"  # prod path for tags
          else
            NAME="ghcr.io/nguyenkien0703/${REPO}"  # dev path for master branch
          fi
            echo "IMAGE_NAME=$(echo "$NAME" | tr '[:upper:]' '[:lower:]' )" >> "$GITHUB_ENV"

      - name: Build and push Docker image
        if: github.ref_type == 'branch' && github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./devops/dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }} 
          build-args: |
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASS=${{ secrets.DB_PASS }}
            DB_TYPE=${{ secrets.DB_TYPE }}
            DB_LOGGING=${{ secrets.DB_LOGGING }}
            DB_SYNC=${{ secrets.DB_SYNC }}
            API_PORT=${{ secrets.API_PORT }}
            API_PREFIX=${{ secrets.API_PREFIX }}
            ACCESS_JWT_SECRET_KEY=${{ secrets.ACCESS_JWT_SECRET_KEY }}
            REFRESH_JWT_SECRET_KEY=${{ secrets.REFRESH_JWT_SECRET_KEY }}
            ACCESS_TOKEN_EXPIRE_IN_SEC=${{ secrets.ACCESS_TOKEN_EXPIRE_IN_SEC }}
            REFRESH_TOKEN_EXPIRE_IN_SEC=${{ secrets.REFRESH_TOKEN_EXPIRE_IN_SEC }}
            PASSWORD_SECRET_KEY_USER=${{ secrets.PASSWORD_SECRET_KEY_USER }}
            EMAIL_HOST=${{ secrets.EMAIL_HOST }}
            EMAIL_PORT=${{ secrets.EMAIL_PORT }}
            EMAIL_SECURE=${{ secrets.EMAIL_SECURE }}
            EMAIL_USER=${{ secrets.EMAIL_USER }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            CC_EMAILS=${{ secrets.CC_EMAILS }}
            IP_ADDRESS=${{ secrets.IP_ADDRESS }}
            FE_PORT=${{ secrets.FE_PORT }}

      - name: Verify pushed image
        if: github.ref_type == 'branch' && github.ref == 'refs/heads/master'
        run: echo "Image pushed to ${{ env.IMAGE_NAME}}:${{github.sha}}"

      - name: Set up Ssh key
        if: github.ref_type == 'branch' && github.ref == 'refs/heads/master'
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy to dev (master)
        if: github.ref_type == 'branch' && github.ref == 'refs/heads/master'
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} \
          'sh /home/zono/projects/ttcs/be-stg/scripts/deploy-be-ttcs-stg.sh'